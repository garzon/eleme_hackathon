#!/usr/bin/env python
# coding: utf-8

import random
import string
import uuid

import pymysql


def randomstr(length):
    return ''.join(random.choice(string.lowercase) for i in range(length))


def refresh_table(conn):
    cur = conn.cursor()

    drop_table_food = "DROP TABLE IF EXISTS `food`;"
    create_table_food = """
    CREATE TABLE `food` (
        `id` int(11) NOT NULL AUTO_INCREMENT,
        `stock` int(11) NOT NULL,
        `price` int(11) NOT NULL,
        PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    """
    cur.execute(drop_table_food)
    cur.execute(create_table_food)

    drop_table_user = "DROP TABLE IF EXISTS `user`;"
    create_table_user = """
    CREATE TABLE `user` (
        `id` int(11) NOT NULL AUTO_INCREMENT,
        `name` varchar(255) NOT NULL,
        `password` varchar(255) NOT NULL,
        PRIMARY KEY (`id`),
        UNIQUE KEY `uniq_name` (`name`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    """
    cur.execute(drop_table_user)
    cur.execute(create_table_user)

    cur.close()


def insert_user(conn, rows=10000):
    cur = conn.cursor()

    cur.execute("INSERT INTO `user` (name, password) VALUES ('root', 'toor');")

    users = {}
    while len(users) < rows - 1:
        users[randomstr(random.randint(5, 8))] = uuid.uuid4().hex

    for name, password in users.items():
        cur.execute(
            "INSERT INTO `user` (name, password) VALUES ('%s', '%s');" %
            (name, password))

    cur.close()


def insert_food(conn, rows=100, stock=1000):
    cur = conn.cursor()
    for i in range(rows):
        cur.execute("INSERT INTO `food` (stock, price) VALUES (%s, %s)" %
                    (stock, random.randint(3, 30)))
    cur.close()


def main():
    conn = pymysql.connect(host="localhost", port=3306,
                           user="root", password="toor", db="eleme")

    refresh_table(conn)
    insert_user(conn)
    insert_food(conn)

    conn.commit()
    conn.close()


if __name__ == "__main__":
    main()
